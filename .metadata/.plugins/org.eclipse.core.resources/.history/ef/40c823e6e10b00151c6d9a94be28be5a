package automationMobile;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.TimeUnit;
import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;

public class FirstTestCase {

	 	private static WebDriver driver = null;
	 
	    public static void main(String[] args) {
	        // Create a new instance of the Chrome driver
	    	System.setProperty("webdriver.chrome.driver","C:\\Users\\jucas.oliveira\\Documents\\chromedriver\\chromedriver.exe"); 
	        driver = new ChromeDriver();
	 
	        //Put a Implicit wait, this means that any search for elements on the page could take the time the implicit wait is set for before throwing exception
	        driver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);
	 
	        //Launching the Website
	 
	        driver.get("http://t.hostelworld.com");
	 
	        // Inputing city name
	 
	        driver.findElement(By.id("home-search-keywords")).sendKeys("Dublin, Ireland"); 
	 
	         
	        // Find and select the name of the city on autocomplete
	 
	        driver.findElement(By.xpath("//*[contains(@class,'suggestion needsclick')]")).click();
	      
	        // Find the button search
	 
	        driver.findElement (By.xpath("//*[@id='sb-search']/div[3]/div/button")).click();
	        
	        
	        // Find element sort to select by name
	        
	        driver.findElement (By.xpath("//*[@id='pagebody']/div[1]/div/div/div[12]/div[3]/div/div/div/div/dl[1]/dd[2]")).click();
	        
	        // Select name
	        driver.findElement (By.xpath("//*[@id='sortByName']")).click();
	        
	        //Verify alfabetic order
	        List<WebElement> allItems = driver.findElements(By.xpath("//*[@class='hwta-property-link']"));
	        
	        //Run the list and remove undesirable texts 
	        for(int i=0;i<allItems.size();i++){
	        
		        //Privates From and Dorms From have the same class name on xpath, remove from the list
		        if(allItems.get(i).getText().equals("Privates From")){
		        	//allItems.remove(i);
		        	System.out.println(allItems.get(i).getText());
		        }

	        }
	        	
	        /*
	        // Print a Log message to the screen
	        for(int i=0;i<allItems.size();i++){
	        	// Verifiying alphabetic order
	        	if(allItems.get(i).getText().compareToIgnoreCase((allItems.get(i + 1).getText())) > 0 ) { 
	        	       System.out.println("True");
	        	       break;
	        	       
	        	   }
	        	 
	        		
	        }
	        
	        for(int i=0;i<allItems.size();i++){
	        	System.out.println(allItems.get(i).getText());
	        }
	        */
	        
	   	 
	        System.out.println("/n Test Complete");
	      
	        // Close the driver
	        
	        driver.close();
	 
	        }

}
